How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I didn't have to read the parts that didn't change.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It could help me identify and undo mistakes faster.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Commits are easier to understand later.
    Cons: Having to think about and remembering when to do the next commit. And
    waste a little time doing the commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because some are used in platforms more aimed to create auto-contained
    files, while others in platforms more aimed to create projects with files
    that depend in one another.

How can you use the commands git log and git diff to view the history of files?

    git log shows all the commits, and git diff the differences between 2 of
    them.

How might using version control make you more confident to make changes that
could break something?

    Because it makes easier to undo mistakes.

Now that you have your workspace set up, what do you want to try using Git for?

    Developing Android projects.